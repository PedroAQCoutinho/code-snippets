#Este script e'dedicado a criar um padrão para logging em scripts R
library(dplyr)
# Definindo o arquivo de log
log_file <- "log"
sink(log_file, append = TRUE)  # Redireciona a saída para o arquivo
# Definindo o arquivo de log
log_file <- "logging_r/log"
sink(log_file, append = TRUE)  # Redireciona a saída para o arquivo
a <- 1
sink()
a+b+c
b <- 2
c <- 3
a+b+c
sink()
install.packages('logger')
library(logger)
a <- 1
b <- 2
somador(a, b)
return(a+b)
somador <-  function(a, b ) {
return(a+b)
}
somador(a, b)
log_info('Soma de a + b')
library(logger)
# Configurando o logger para salvar logs em um arquivo
log_appender(appender_file("logging_r/log"))
# Exemplo de logs em diferentes níveis
log_info("Este é um log de nível INFO")
log_debug("Este é um log de nível DEBUG")
log_warn("Este é um log de nível WARNING")
log_error("Este é um log de nível ERROR")
# Usando variáveis nos logs
a <- 1
b <- 2
log_info("Somando a e b: {a} + {b} = {a + b}")
library(jsonlite)
config <- fromJSON("config_env_files/config.json")
config <- fromJSON("config_env_files/config.json")
View(config)
paths <- config$paths
config <- fromJSON("config_env_files/config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
paths
config <- fromJSON("config_env_files/config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
auxiliares$num_nucleos
library(dotenv)
install.packages('dotenv')
library(dotenv)
Sys.getenv('DB_NAME')
db_name <- Sys.getenv('DB_NAME')
setwd('config_env_files/')
library(dotenv)
dotenv::load_dot_env()
db_name <- Sys.getenv('DB_NAME')
db_password <- Sys.getenv('DB_PASSWORD')
db_port <- Sys.getenv('DB_PORT')
db_host <- Sys.getenv('DB_HOST')
library(jsonlite)
library(dotenv)
############
#CONFIG FILE
############
rm(list=ls())
config <- fromJSON("config_env_files/config.json")
config <- fromJSON("config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
paths
paths$ckan_utils_path
paths$dados_path
arquivos$malha
paste(paths$dados_path, arquivos$malha, sep = '/')
source('https://github.com/PedroAQCoutinho/code-snippets/blob/main/config_env_files/config.json')
rm(list=ls())
config <- fromJSON("config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
rm(list=ls())
rm(list=ls())
config <- fromJSON("config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
rm(list=ls())
config <- fromJSON("config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
#Verificar se conseguimos ler um link
source('https://github.com/PedroAQCoutinho/code-snippets/blob/main/config_env_files/ckan_utils.R')
auxiliares$num_nucleos
auxiliares$num_nucleos
library(dotenv)
dotenv::load_dot_env()
dotenv::load_dot_env()
library(jsonlite)
rm(list=ls())
############
library(dotenv)
dotenv::load_dot_env()
library(dotenv)
dotenv::load_dot_env()
############
#ENV FILE
############
getwd()
library(dotenv)
dotenv::load_dot_env()
dotenv::load_dot_env()
library(dotenv)
dotenv::load_dot_env()
db_name <- Sys.getenv('DB_NAME')
db_password <- Sys.getenv('DB_PASSWORD')
db_port <- Sys.getenv('DB_PORT')
db_user <- Sys.getenv('DB_USER')
db_host <- Sys.getenv('DB_HOST')
db_password
db_name
dotenv::load_dot_env(file = '/home/pedro/outolougar/.env')
db_user <- Sys.getenv('DB_USER')
library(dplyr)
rm(list=ls())
library(dotenv)
library(jsonlite)
library(dotenv)
rm(list=ls())
############
#CONFIG FILE
############
# Lendo o arquivo de configuração​
config <- fromJSON("config.json")
library(jsonlite)
library(dotenv)
rm(list=ls())
############
#CONFIG FILE
############
# Lendo o arquivo de configuração​
config <- fromJSON("config.json")
rm(list=ls())
config <- fromJSON("config.json")
paths <- config$paths
rm(list=ls())
config <- fromJSON("config.json")
config <- fromJSON("config.json")
config <- fromJSON("config.json")
config <- fromJSON("config.json")
rm(list=ls())
config <- fromJSON("config.json")
config <- fromJSON("config.json")
library(jsonlite)
library(dotenv)
rm(list=ls())
# Lendo o arquivo de configuração
config <- fromJSON("config.json")
# Lendo o arquivo de configuração
config <- fromJSON("config.json")
# Lendo o arquivo de configuração
config <- fromJSON("config.json")
# Lendo o arquivo de configuração
config <- fromJSON("config_env_files/config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
#Fazer conexoes
load_dot_env() #Sistema operacional ja pussui a var armazenada
db_name <- Sys.getenv('DB_NAME')
db_password <- Sys.getenv('DB_PASSWORD')
db_port <- Sys.getenv('DB_PORT')
db_user <- Sys.getenv('DB_USER')
#Fazer conexoes
load_dot_env('config_env_files/.env') #Sistema operacional ja pussui a var armazenada
#Fazer conexoes
load_dot_env(file = 'config_env_files/.env') #Sistema operacional ja pussui a var armazenada
#Fazer conexoes
load_dot_env(file = 'config_env_files/.env') #Sistema operacional ja pussui a var armazenada
db_name <- Sys.getenv('DB_NAME')
db_password <- Sys.getenv('DB_PASSWORD')
db_port <- Sys.getenv('DB_PORT')
db_user <- Sys.getenv('DB_USER')
db_host <- Sys.getenv('DB_HOST')
savehistory(".Rhistory")
savehistory("config_env_files/.Rhistory")
library(jsonlite)
library(dotenv)
rm(list=ls())
############
#CONFIG FILE
############
# Lendo o arquivo de configuração
config <- fromJSON("config_env_files/config.json")
paths <- config$paths
ckan_recursos <- config$ckan_recursos
salvar_dados <- config$salvar_dados
auxiliares <- config$auxiliares
arquivos <- config$arquivos
#Fazer conexoes
load_dot_env(file = 'config_env_files/.env') #Sistema operacional ja pussui a var armazenada
############
#ENV FILE
############
db_name <- Sys.getenv('DB_NAME')
db_password <- Sys.getenv('DB_PASSWORD')
db_port <- Sys.getenv('DB_PORT')
db_user <- Sys.getenv('DB_USER')
db_host <- Sys.getenv('DB_HOST')
savehistory("config_env_files/hist.Rhistory")
source('https://github.com/PedroAQCoutinho/code-snippets/blob/main/config_env_files/ckan_utils.R')
source("https://raw.githubusercontent.com/PedroAQCoutinho/code-snippets/main/config_env_files/ckan_utils.R")
a <- read.table('../../../Downloads/mt_base.csv')
a <- read.csv2('../../../Downloads/mt_base.csv')
a <- read.csv('../../../Downloads/mt_base.csv')
sum(a$area_pastagem)
a <- read.csv('../../../Downloads/mt_base_shp.csv')
sum(a$area_pastagem)
a <- read.csv2('../../../Downloads/mt_base_shp.csv')
sum(a$area_pastagem)
sum(as.numeric(a$area_pastagem))
a <- read.csv2('../../../Downloads/mt_base_completa.csv')
a
dir()
a <- read.csv2('../../../Downloads/mt_base_completa.csv')
a
View(a)
write.csv(a, '../../../Downloads/mt_base_completa2.csv')
write.table(a, '../../../Downloads/mt_base_completa2.csv', dec = ',', sep = ';')
View(a)
a <- read.csv2('../../../Downloads/mt_base_completa.csv', dec = '.')
write.table(a, '../../../Downloads/mt_base_completa2.csv', dec = ',', sep = ';')
write.table(a, '../../../Downloads/mt_base_completa2.csv', dec = '.', sep = ';')
a <- read.csv('/home/pedro/Downloads/mt_base_completa.csv')
a <- read.csv('/home/pedro/Downloads/mt_base_completa.csv')
a
a <- read.csv2('/home/pedro/Downloads/mt_base_completa.csv')
library(dplyr)
a %>% mutate(uf = substr(cd_mun, 1, 2))
a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1)
b <- a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1)
View(b)
b %>%
group_by(uf) %>%
summarise(area_elegivel_outros = sum(area_elegivel_outros),
area_elegivel_soja = sum(area_elegivel_soja),
area_elegivel_saf = sum(area_elegivel_saf))
a <- read.csv2('/home/pedro/Downloads/mt_base_completa.csv', dec = '.')
b <- a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1)
b %>%
group_by(uf) %>%
summarise(area_elegivel_outros = sum(area_elegivel_outros),
area_elegivel_soja = sum(area_elegivel_soja),
area_elegivel_saf = sum(area_elegivel_saf))
a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1) %>%
summarise(area_elegivel_outros = sum(area_elegivel_outros),
area_elegivel_soja = sum(area_elegivel_soja),
area_elegivel_saf = sum(area_elegivel_saf))
a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1) %>%
summarise(area_elegivel_outros = sum(area_elegivel_outros),
area_elegivel_soja = sum(area_elegivel_soja),
area_elegivel_saf = sum(area_elegivel_saf)) %>%
filter(uf = '51')
a %>% mutate(uf = substr(cd_mun, 1, 2)) %>%
group_by(uf) %>%
filter(!(is_restrito & is_desm_recente) & area_nao_alto_vigor > 1) %>%
summarise(area_elegivel_outros = sum(area_elegivel_outros),
area_elegivel_soja = sum(area_elegivel_soja),
area_elegivel_saf = sum(area_elegivel_saf)) %>%
filter(uf == '51')
